<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class m_kriteria extends CI_Model
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('m_nilai');
        $this->load->dbforge();
    }

    function get_kriteria($id)
    {
        return $this->db->get_where('list_kriteria',array('kode'=>$id))->row_array();
    }

    function get_tahun_by($id)
    {
        $this->db->like('kode',$id);
        return $this->db->get('list_kriteria')->result_array();
    }

        
    function get_all_kriteria()
    {
        $this->db->order_by('kode', 'asc');
        return $this->db->get('list_kriteria')->result_array();
    }

    function get_kriteria_id()
    {
        $this->db->select('kode');
        return $this->db->get('list_kriteria')->result_array();
    }

    function get_num_kriteria()
    {
        return $this->db->get('list_kriteria')->num_rows();
    }

    function get_tahun_kriteria()
    {
        return $this->db->query("SELECT distinct(SUBSTRING(`kode`, 2, 4)) AS tahun from `list_kriteria`;")->result_array();
    }
    
    function get_num_tahun_kriteria()
    {

        return $this->db->query("SELECT distinct(SUBSTRING(`kode`, 2, 4)) AS tahun from `list_kriteria`;")->num_rows();
    }
    
    function proses_kriteria()
    {
        if ($this->input->post('tipe')=="save"){
            $data = array(
                'kode' => $this->input->post('kode'),
                'deskripsi' => ucwords($this->input->post('deskripsi')),
                'bobot' => $this->input->post('bobot'),
                'atribut' => $this->input->post('atribut')
            );
            if($this->db->insert('list_kriteria',$data)){
                $field = array(
                    $this->input->post('kode') => array(
                        'type'          => 'INT',
                        'constraint'    => 3,
                        'default'       => 0
                    )   
                );
                $this->dbforge->add_column('list_nilai',$field);
                $this->m_nilai->create_nilai_pivot();
                return true;
            } else {
                return false;
            }

            // echo "save";

        } else if ($this->input->post('tipe')=="update"){
            $this->db->set('deskripsi',$this->input->post('deskripsi'));
            $this->db->set('bobot',$this->input->post('bobot'));
            $this->db->set('atribut',$this->input->post('atribut'));
            $this->db->where('kode',$this->input->post('kode'));
            return $this->db->update('list_kriteria');

            // echo "update";

        } else if ($this->input->post('tipe')=="delete"){
            $this->db->where('kode',$this->input->post('kode'));
            if($this->db->delete('list_kriteria')){
                return $this->dbforge->drop_column('list_nilai', $this->input->post('kode'));
                return $this->db->delete('nilai_pivot',array('kriteria'=>$this->input->post('kode')));
            } else {
                return false;
            }

            // echo "delete";

        }
        $this->m_nilai->hitung();
    }
}
